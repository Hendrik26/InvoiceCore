@startuml
participant ":CommandHandler" as CoHa
participant ":Repository" as Repo
participant ":Aggregate" as Aggr
participant ":EventStore" as EvSt
-> CoHa: aCommand
activate CoHa
CoHa -> Repo: load(id)
activate Repo
Repo -> EvSt: listEventsForId(id)
activate EvSt
Repo <-- EvSt: events
deactivate EvSt
Repo -> Aggr: reconstituteFrom(aHistory)
activate Aggr
loop
Aggr -> Aggr: apply(anEvent)
activate Aggr
deactivate Aggr
end
Repo <-- Aggr: Aggr
CoHa <-- Repo: Aggr
deactivate Repo
loop
CoHa -> Aggr: someMethod(...)
Aggr -> Aggr: recordThat(anEvent)
activate Aggr
deactivate Aggr
end
CoHa -> Repo: save(Aggr)
activate Repo
Repo -> Aggr: getRecordedEvents()
Repo <-- Aggr: events
deactivate Aggr
Repo -> EvSt: append(events)
activate EvSt
deactivate Repo
deactivate EvSt
deactivate CoHa
@enduml
